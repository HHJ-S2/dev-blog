{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-09-22-타입으로써의-프로토콜/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>타입으로써의 프로토콜</h2>\n<p>swift에서 프로토콜은 일급객체이기 때문에 타입으로 사용 가능하다.</p>\n<ul>\n<li>\n<p>프로토콜을 변수에 할당할수 있다.</p>\n</li>\n<li>\n<p>함수를 호출할때, 프로토콜을 파라미터로 전달할 수 있다.</p>\n</li>\n<li>\n<p>함수에서 프로토콜을 반환할 수 있다.</p>\n</li>\n</ul>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token constant\">TV</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SetTopBox</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">doNetflix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> tv <span class=\"token operator\">=</span> <span class=\"token function\">TV</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> setTopBox <span class=\"token operator\">=</span> <span class=\"token class-name\">SetTopBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 프로토콜을 타입으로 사용</span>\n<span class=\"token keyword\">let</span> electronic<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token class-name\">Remote</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>tv<span class=\"token punctuation\">,</span> setTopBox<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> electronic <span class=\"token punctuation\">{</span>\n  item<span class=\"token punctuation\">.</span><span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 프로토콜을 파라미터의 타입으로 사용</span>\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOnSomeElectronic</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Remote</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  item<span class=\"token punctuation\">.</span><span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">turnOnSomeElectronic</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> tv<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// is 연산자</span>\ntv <span class=\"token keyword\">is</span> <span class=\"token class-name\">Remote</span>\nsetTopBox <span class=\"token keyword\">is</span> <span class=\"token class-name\">Remote</span>\n\n<span class=\"token comment\">// as 연산자</span>\nsetTopBox <span class=\"token keyword\">as</span> <span class=\"token class-name\">Remote</span> <span class=\"token comment\">// 업캐스팅</span>\n<span class=\"token keyword\">let</span> newSetTopBox <span class=\"token operator\">=</span> electronic<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token class-name\">SetTopBox</span> <span class=\"token comment\">// 다운캐스팅</span></code></pre></div>","frontmatter":{"title":"타입으로써의 프로토콜","summary":"타입으로써의 프로토콜","date":"2022.09.22.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-09-22-타입으로써의-프로토콜/"}},"staticQueryHashes":[]}