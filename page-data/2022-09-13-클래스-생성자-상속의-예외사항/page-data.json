{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-09-13-클래스-생성자-상속의-예외사항/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>지정생성자 자동상속의 예외사항</h2>\n<p>인스턴스 생성 실패의 가능성이 없는경우</p>\n<ol>\n<li>새 저장속성이 없거나</li>\n<li>기본값이 모두 설정되어있는 경우</li>\n</ol>\n<p>위 경우에는 상위 클래스의 지정생성자가 하위클래스에 자동상속된다.</p>\n<br/>\n<h2>편의생성자의 자동상속의 예외상황</h2>\n<p>위에서 설명한것처럼 상위 지정생성자를 모두 상속하는 경우 편의생성자도 자동상속된다.</p>\n<p>또는 상위의 지정생성자를 모두 재정의하는 경우에도 편의생성자가 자동상속된다.</p>\n<br>\n<h3>예제</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token class-name\">Darwin</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Food</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span>\n\n  <span class=\"token comment\">// 지정생성자</span>\n  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 편의생성자</span>\n  <span class=\"token keyword\">convenience</span> <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"[Unnamed]\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> namedMeet <span class=\"token operator\">=</span> <span class=\"token class-name\">Food</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Bacon\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> myseryMead <span class=\"token operator\">=</span> <span class=\"token class-name\">Food</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyseryMead<span class=\"token punctuation\">.</span>name <span class=\"token comment\">// [Unnamed]</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RecipeIngredient</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Food</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> quantity<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span>\n\n  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 모든 속성 초기화</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>quantity <span class=\"token operator\">=</span> quantity\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 상위 지정생성자를 편의생성자로 재정의 => 지정생성자 호출</span>\n  <span class=\"token keyword\">override</span> <span class=\"token keyword\">convenience</span> <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 보이지는 않지만 상위의 편의생성자 자동상속됨 ⭐️</span>\n  <span class=\"token comment\">// convenience init() {}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> mysteryItem <span class=\"token operator\">=</span> <span class=\"token class-name\">RecipeIngredient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmysteryItem<span class=\"token punctuation\">.</span>name <span class=\"token comment\">// [Unnamed]</span>\nmysteryItem<span class=\"token punctuation\">.</span>quantity <span class=\"token comment\">// 1</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ShoppingListItem</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">RecipeIngredient</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> purchased <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">var</span> description<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> output <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">quantity</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> * </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">name</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span>\n\n    output <span class=\"token operator\">+=</span> purchased <span class=\"token operator\">?</span> <span class=\"token string-literal\"><span class=\"token string\">\" 계산됨\"</span></span> <span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\" 계산전\"</span></span>\n\n    <span class=\"token keyword\">return</span> output\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// init(name: String, quantity: Int) {} // 지정생성자 모두 자동 상속 ⭐️</span>\n  <span class=\"token comment\">// convenience init(name: String) {} // 따라서 편의생성자도 모두 자동 상속 ⭐️</span>\n  <span class=\"token comment\">// convenience init() {} // 따라서 편의생성자도 모두 자동 상속 ⭐️</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> shoppingList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token class-name\">ShoppingListItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token class-name\">ShoppingListItem</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Bacon\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token class-name\">ShoppingListItem</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Eggs\"</span></span><span class=\"token punctuation\">,</span> quantity<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"클래스(Class) - 생성자, 상속의 예외사항","summary":"클래스(Class) - 생성자, 상속의 예외사항","date":"2022.09.13.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-09-13-클래스-생성자-상속의-예외사항/"}},"staticQueryHashes":[]}