{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-08-07-튜플(Tuple)/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>튜플(Tuple)</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">let</span> twoNumbers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>twoNumbers<span class=\"token punctuation\">.</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1 출력</span>\n\n  <span class=\"token keyword\">let</span> student<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Rena\"</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"울산\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"울산\" 출력</span>\n\n  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Jun\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"부산\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"Jun\" 출력</span></code></pre></div>\n<p>복수개의 데이터의 조합을 저장하는 튜플</p>\n<p>처음 튜플을 할당할때 결정된 데이터의 종류 및 갯수는 변경이 불가하다.</p>\n<p>자바스크립트 객체와 같은것 같은데 작성 방법이 좀 다르다.</p>\n<br/>\n<h2>튜플의 값의 비교</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token punctuation\">(</span><span class=\"token number\">2500</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"apple\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"strawberry\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// true</span>\n  <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"A\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"B\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// error</span></code></pre></div>\n<p>두개의 튜플을 서로 비교할 수 있다.</p>\n<p>비교를 할때는 튜플의 첫번째 값부터 순차적으로 비교해서 참/거짓을 판단한다.</p>\n<p>만약 튜플의 값중에 참/거짓이 들어있으면 그 값은 비교가 불가능 하기 때문에 에러가 발생한다. (<code class=\"language-text\">==</code>은 가능)</p>\n<br/>\n<h2>튜플과 switch문</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Jun\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"부산\"</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"서울\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"서울\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Jun\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Jun\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">break</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">let</span> point <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">switch</span> point <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> x <span class=\"token operator\">==</span> y<span class=\"token punctuation\">:</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"x == y\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">where</span> x <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>y<span class=\"token punctuation\">:</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"x == -y\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">case</span> <span class=\"token keyword\">let</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">x</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\"> == </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">y</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">break</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>와일드카드 패턴(<code class=\"language-text\">_</code>)과 <code class=\"language-text\">where</code>절을 이용해서 switch문에 조건을 걸 수 있다.</p>","frontmatter":{"title":"튜플(Tuple)","summary":"Swift 튜플(Tuple)","date":"2022.08.07.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-08-07-튜플(Tuple)/"}},"staticQueryHashes":[]}