{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-09-11-접근제어-싱글톤/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>접근제어(Access Control)</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"이름\"</span></span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">nameChange</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">private</code> 키워드를 표기하면 해당 저장속성을 직접적으로 변경할수 없고, 메서드를 생성해서 변경해야한다.</p>\n<p>이렇게 코드 내부의 구현 내용을 숨기는것을 은닉화 라고도한다.</p>\n<br/>\n<h2>싱글톤(Singleton)</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 싱글톤 생성</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">let</span> shared <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">var</span> userId <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token comment\">// private init 으로 새로운 객체 생성을 막을 수 있음.</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> singleton1 <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>shared\nsingleton1<span class=\"token punctuation\">.</span>userId <span class=\"token operator\">=</span> <span class=\"token number\">123</span>\n\n<span class=\"token keyword\">let</span> singleton2 <span class=\"token operator\">=</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">.</span>shared\nsingleton2<span class=\"token punctuation\">.</span>userId <span class=\"token operator\">=</span> <span class=\"token number\">456</span>\n\nsingleton1<span class=\"token punctuation\">.</span>userId <span class=\"token comment\">// 456</span>\n\n<span class=\"token comment\">// error</span>\n<span class=\"token comment\">// let singletone3 = User()</span></code></pre></div>\n<p>메모리상에서 유일하게 1개만 존재하는 객체를 싱글톤(Singleton)이라고 한다. 변수에 접근할때 메모리에 올라간다.(lazy)</p>\n<p><code class=\"language-text\">static let shared</code>으로 표기해서 선언하고 자기 자신을 객체로 생성한다.</p>\n<p><code class=\"language-text\">private init() {}</code>으로 새로운 객체 생성을 막을 수 있다.</p>","frontmatter":{"title":"접근제어(Access Control), 싱글톤(Singleton)","summary":"접근제어(Access Control), 싱글톤(Singleton)","date":"2022.09.11.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-09-11-접근제어-싱글톤/"}},"staticQueryHashes":[]}