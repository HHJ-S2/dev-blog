{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-08-14-함수(Function)/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>함수(Function)</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">printHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"hello\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">printHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">printName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"hello </span><span class=\"token interpolation-punctuation punctuation\">\\(</span><span class=\"token interpolation\">name</span><span class=\"token interpolation-punctuation punctuation\">)</span><span class=\"token string\">!\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">printName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"Any\"</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 반환값이 없는 함수는 Void 타입이 생략되어있다.</span>\n  <span class=\"token comment\">// func printName(name: String) -> Void {...}</span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>함수를 정의할때는 <code class=\"language-text\">func</code> 키워드를 사용한다.</p>\n<p>매개변수나 반환값이 있는경우 타입지정을 해 주어야 한다.</p>\n<br/>\n<h2>Argument Label</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">sum</span><span class=\"token punctuation\">(</span>first a<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> second b<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 와일드카드 패턴으로 생략 가능</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">wildCardSum</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> a<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> <span class=\"token omit keyword\">_</span> b<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">wildCardSum</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<h2>가변 파라미터</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">total</span><span class=\"token punctuation\">(</span><span class=\"token omit keyword\">_</span> numbers<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> numbers <span class=\"token punctuation\">{</span>\n      result <span class=\"token operator\">+=</span> i\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> result\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">total</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// print(items: Any..., separator: String, terminator: String)</span>\n  <span class=\"token comment\">// print 함수도 가변 파라미터를 쓰고 있다.</span></code></pre></div>\n<p>파라미터로 어떤 값들이 들어올 지 모르는경우 파라미터에 범위연산자를 사용할 수 있다.</p>\n<br/>\n<h2>함수의 오버로딩(Overloading)</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">printSomething</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">printSomething</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">printSomething</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">printSomething</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">printSomething</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">printSomething</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"hello\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>같은 이름의 함수를 여러개 중첩해서 만들수 있다.</p>\n<p>함수를 호출할때 함수의 이름, 파라미터 타입, 반환 타입등으로 함수를 식별해서 자동완성으로 보여준다.</p>\n<br/>\n<h2>입출력 파라미터</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">swapNumbers</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token keyword\">inout</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> a\n    a <span class=\"token operator\">=</span> b\n    b <span class=\"token operator\">=</span> temp\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">var</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">123</span>\n  <span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">456</span>\n\n  <span class=\"token function\">swapNumbers</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>num1<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>num2<span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 456, 123 출력</span></code></pre></div>\n<p>변수 자체를 파라미터로 전달해서 원본 자체를 변경한다.</p>\n<p>상수나 값을 전달할수 없다.</p>\n<br/>\n<h2>discardableResult</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token attribute atrule\">@discardableResult</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-literal\"><span class=\"token string\">\"hello\"</span></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// or _ = hello()</span></code></pre></div>\n<p>반환값이 있는 함수를 호출하지만 그 값을 사용하지 않고 실행만 하는경우 <code class=\"language-text\">@discardableResult</code> 를 사용하거나</p>\n<p><code class=\"language-text\">_ = hello()</code> 처럼 와일드카드를 사용해서 워닝을 처리해준다.</p>","frontmatter":{"title":"함수(Function)","summary":"Swift 함수(Function)","date":"2022.08.14.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-08-14-함수(Function)/"}},"staticQueryHashes":[]}