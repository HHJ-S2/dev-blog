{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-10-04-에러처리/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>에러 처리 문법</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">ErrorEnum</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Error</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> maxNumber\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function-definition function\">checkCount</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Bool</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> number <span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token class-name\">ErrorEnum</span><span class=\"token punctuation\">.</span>maxNumber\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// do: 정상적인 케이스, catch: 에러 케이스</span>\n<span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token function\">checkCount</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// try는 do스코프 안에서 실행해야한다.</span>\n\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token class-name\">ErrorEnum</span><span class=\"token punctuation\">.</span>maxNumber <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"8자리 이상입니다.\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token function\">checkCount</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>localizedDescription<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 앱에 설정된 언어로 로컬라이징</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> error <span class=\"token operator\">=</span> error <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token class-name\">ErrorEnum</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> error <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>maxNumber<span class=\"token punctuation\">:</span>\n      <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"8자리 이상입니다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2>try? try!</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// try?</span>\n<span class=\"token comment\">// Optional try</span>\n<span class=\"token comment\">// 옵셔널 타입으로 리턴</span>\n<span class=\"token comment\">// 에러가 발생하면 nil을 리턴</span>\n\n<span class=\"token keyword\">let</span> isCheck1 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span><span class=\"token operator\">?</span> <span class=\"token function\">checkCount</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// try!</span>\n<span class=\"token comment\">// Forced try</span>\n<span class=\"token comment\">// 에러가 날 수 없는 경우에만 사용 가능</span>\n<span class=\"token comment\">// 에러가 발생하면 런타임 에러</span>\n\n<span class=\"token keyword\">let</span> isCheck2 <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span><span class=\"token operator\">!</span> <span class=\"token function\">checkCount</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">deferFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">defer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"first\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"second\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">deferFunc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// \"second\", \"first\" 출력</span></code></pre></div>\n<p><code class=\"language-text\">defer</code> 블록 안에 있는 코드는 가장 마지막에 실행된다.</p>\n<p><code class=\"language-text\">defer</code> 가 여러개 있으면 등록한 역순으로 실행된다.</p>","frontmatter":{"title":"에러 처리","summary":"swift에서 에러 처리 하기","date":"2022.10.04.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-10-04-에러처리/"}},"staticQueryHashes":[]}