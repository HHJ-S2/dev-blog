{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-09-19-프로토콜-사용하기/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>프로토콜 문법</h2>\n<h3>메서드 작성시 요구사항</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">protocol</span> myProtocol <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> id<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">var</span> type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">doSomething1</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">doSomething2</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">mutating</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">soSomething3</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">SuperClass</span><span class=\"token punctuation\">,</span> myProtocol <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 채택한 프로토콜 구현</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>프로토콜을 채택할때는 상속받는 상위클래스가 있는경우 이를 먼저 명시한 후, 프로토콜 이름을 작성해준다.</p>\n<p>프로토콜 작성시 최소한의 요구사항(get, set…)을 지정해야한다.</p>\n<p>타입메서드를 클래스에서 채택해서 구현하는경우 static, class 키워드 모두 가능하다.</p>\n<p>관습적으로 프로토콜은 확장(Extension)에서 채택한다.</p>\n<br/>\n<p><b>계산속성</b></p>\n<ul>\n<li>get: <code class=\"language-text\">let</code>, <code class=\"language-text\">var</code> <br/></li>\n<li>get, set: <code class=\"language-text\">var</code></li>\n</ul>\n<p><b>계산타입속성</b></p>\n<ul>\n<li><code class=\"language-text\">static</code> 키워드로 구현 <br/></li>\n<li>클래스에서는 <code class=\"language-text\">static</code>, <code class=\"language-text\">class</code> 모두 가능</li>\n</ul>\n<h3>예제</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Togglable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">mutating</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">OnOffSwitch</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Togglable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> on<span class=\"token punctuation\">,</span> off\n\n  <span class=\"token keyword\">mutating</span> <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token keyword\">self</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>off<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">self</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>on\n    <span class=\"token keyword\">case</span> <span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">self</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>off\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> 스위치 <span class=\"token operator\">=</span> <span class=\"token class-name\">OnOffSwitch</span><span class=\"token punctuation\">.</span>off\n스위치<span class=\"token punctuation\">.</span><span class=\"token function\">toggle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>구조체에서 저장속성을 변경하는 함수를 구현할때는 <code class=\"language-text\">mutating</code> 키워드가 필요한데 프로토콜에도 이를 명시해야한다.</p>\n<br/>\n<h3>프로토콜에서의 생성자</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Protocol1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">subscript</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>프로토콜에 생성자를 요구사항으로 지정 가능하다.</p>\n<ul>\n<li>클래스에서 생성자 채택시, 하위클래스를 고려하여 <code class=\"language-text\">required</code> 키워드를 붙여야한다.</li>\n<li>클래스가 <code class=\"language-text\">final</code>로 선언되면 <code class=\"language-text\">required</code>키워드를 생략할 수 있다.</li>\n<li>클래스에서는 반드시 지정생성자로 구현할 필요는 없다. (편의생성자로 구현 가능)</li>\n<li>실패가능생성자(<code class=\"language-text\">init?()</code>)는 -> <code class=\"language-text\">init()</code>, <code class=\"language-text\">init?()</code>, <code class=\"language-text\">init!()</code>로 구현 가능하다.</li>\n</ul>\n<br/>\n<h3>프로토콜에서의 서브스크립트</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token class-name\">SubScriptProtocol</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">subscript</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Int</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"프로토콜 사용하기","summary":"프로토콜 사용하기","date":"2022.09.19.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-09-19-프로토콜-사용하기/"}},"staticQueryHashes":[]}