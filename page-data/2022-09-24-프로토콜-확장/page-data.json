{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-09-24-프로토콜-확장/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>프로토콜의 확장</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Remote를 채택한 곳에서 아래 메서드는 기본 구현이 됨.</span>\n<span class=\"token keyword\">extension</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"리모콘 켜기\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"리모콘 끄기\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>프로토콜의 확장이란 프로토콜을 채택한 타입에서 실제 메서드를 중복 구현해야하는 불편함을 제거하기 위해 기본구현을 제공하는 개념이다.</p>\n<br/>\n<h3>프로토콜 타입 지정에 따른 우선순위</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">extension</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"리모콘 켜기\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"리모콘 끄기\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"다른 동작 실행\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> iPhone<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"아이패드 켜기\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"아이패드 다른동작 실행\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>인스턴스 타입이 클래스로 지정되어있는경우</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// 타입을 iPhone으로 지정</span>\n<span class=\"token keyword\">let</span> iPhone1<span class=\"token punctuation\">:</span> iPhone <span class=\"token operator\">=</span> <span class=\"token function\">iPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\niPhone1<span class=\"token punctuation\">.</span><span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 아이패드 켜기</span>\niPhone1<span class=\"token punctuation\">.</span><span class=\"token function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 리모콘 끄기</span>\niPhone1<span class=\"token punctuation\">.</span><span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 아이패드 다른동작 실행 ⭐️</span></code></pre></div>\n<p>항상 클래스에서 구현한 메서드가 우선순위로 적용된다.</p>\n<br/>\n<br/>\n<h3>인스턴스의 타입이 프로토콜로 지정되어있을경우</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// 타입을 Remote로 지정</span>\n<span class=\"token keyword\">let</span> iPhone2<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Remote</span> <span class=\"token operator\">=</span> <span class=\"token function\">iPhone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\niPhone2<span class=\"token punctuation\">.</span><span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 아이패드 켜기</span>\niPhone2<span class=\"token punctuation\">.</span><span class=\"token function\">turnOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 리모콘 끄기</span>\niPhone2<span class=\"token punctuation\">.</span><span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 다른동작 실행 ⭐️</span></code></pre></div>\n<p>클래스와 프로토콜 모두 같은 이름의 메서드를 구현했을때 프로토콜의 메서드가 클래스의 메서드를 덮어쓴다.(Direct Dispatch)</p>\n<p>클래스에서 만들어진 메서드 테이블을 Virtual Table, 프로토콜의 메서드 테이블을 Witness Table이라고 한다.</p>\n<br/>\n<p>구조체도 클래스와 동일하게 동작하고 메모리 구조상에서 항상 메서드를 덮어쓴다?(구조체는 다시 봐야할듯)</p>\n<p>구조체의 크기에 따라 메모리 구조의 힙에 저장되는 경우도 있다.</p>\n<br/>\n<h2>포로토콜 확장의 적용 제한</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// Remote 프로토콜을 채택한 경우에만 Bluetooth 확장이 적용</span>\n<span class=\"token keyword\">extension</span> <span class=\"token class-name\">Bluetooth</span> <span class=\"token keyword\">where</span> <span class=\"token keyword\">Self</span><span class=\"token punctuation\">:</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">blueOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function-definition function\">blueOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>구체적인 적용 범위를 제한하고 싶은경우 <code class=\"language-text\">where Self: Remote</code>와 같이 표기하여</p>\n<p>특정 프로토콜을 채택한 타입에만 해당 <code class=\"language-text\">extension</code>을 적용시킬 수 있다.</p>","frontmatter":{"title":"프로토콜(Protocols) - 확장","summary":"프로토콜(Protocols) - 확장","date":"2022.09.24.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-09-24-프로토콜-확장/"}},"staticQueryHashes":[]}