{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-08-06-swift-에서-새로-알게된-조건문과-연산자등/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>범위연산자</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">  <span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> <span class=\"token class-name\">Int</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token operator\">...</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 랜덤한 정수값 출력</span></code></pre></div>\n<p>위와같이 범위연산자 <code class=\"language-text\">...</code> 를 사용해서 1~3 사이의 값을 표기할 수 있다.</p>\n<br/>\n<h2>switch문 fallthrough</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n\n<span class=\"token keyword\">switch</span> num <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token operator\">..&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"10보다 작다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">fallthrough</span>\n\n  <span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"10이다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">fallthrough</span>\n\n  <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"끝\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// \"10이다.\", \"끝\" 출력</span></code></pre></div>\n<p><code class=\"language-text\">switch</code> 문에서 <code class=\"language-text\">fallthrough</code> 를 사용하면 매칭된 값에 대한 고려 없이 무조건 다음 블럭을 실행한다.</p>\n<br/>\n<h2>패턴매칭 연산자와 범위 연산자</h2>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> num <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">~=</span> <span class=\"token number\">0</span><span class=\"token operator\">...</span><span class=\"token number\">50</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"num은 0 ~ 50 사이에 속한다\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> tempreature <span class=\"token operator\">=</span> <span class=\"token number\">23</span>\n\n<span class=\"token keyword\">switch</span> tempreature <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token operator\">..&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"영하 ~ 0도 미만\"</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">...</span><span class=\"token number\">18</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"0 ~ 18도\"</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">case</span> <span class=\"token number\">18</span><span class=\"token operator\">...</span><span class=\"token punctuation\">:</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"19도 이상\"</span></span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">break</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// \"num은 0 ~ 50 사이에 속한다\", \"19도 이상\" 출력</span></code></pre></div>\n<p>범위연산자와 패턴매칭 연산자를 사용하여 조건문을 실행시킬수 있다.</p>","frontmatter":{"title":"swift 에서 새로 알게된 조건문과 연산자등","summary":"swift 에서 새로 알게된 조건문과 연산자등","date":"2022.08.06.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-08-06-swift-에서-새로-알게된-조건문과-연산자등/"}},"staticQueryHashes":[]}