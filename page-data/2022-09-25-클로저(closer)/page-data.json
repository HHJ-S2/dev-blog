{"componentChunkName":"component---src-templates-post-template-tsx","path":"/2022-09-25-클로저(Closer)/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>클로저(Closer)</h2>\n<h3>클로저 표현 문법</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// {(params) -> returnType in</span>\n  <span class=\"token comment\">// statements</span>\n<span class=\"token comment\">// }</span></code></pre></div>\n<p>클로저는 이름이 없는(익명) 함수이다. 함수의 파라미터로 전달하는 함수인 콜백함수이다.</p>\n<br/>\n<h3>클로저의 여러 형태</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token comment\">// 타입 추론</span>\n<span class=\"token function\">executeClosure</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">:</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span>count\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">executeClosure</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>str <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span>count\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 한줄인 경우 리턴을 생략(Implicit return)</span>\n<span class=\"token function\">executeClosure</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>str <span class=\"token keyword\">in</span>\n  <span class=\"token short-argument\">$0</span><span class=\"token punctuation\">.</span>count\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Algument label 생략</span>\n<span class=\"token function\">executeClosure</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token short-argument\">$0</span><span class=\"token punctuation\">.</span>count\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 후행클로저</span>\n<span class=\"token function\">executeClosure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token short-argument\">$0</span><span class=\"token punctuation\">.</span>count\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// executeClosure { $0.count }</span></code></pre></div>\n<br/>\n<h3>후행 클로저 (Trailing closure)</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">printTextWithClosure</span><span class=\"token punctuation\">(</span>closure<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token class-name\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"first\"</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">closure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printTextWithClosure</span><span class=\"token punctuation\">(</span>closure<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"second\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">printTextWithClosure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"second\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nprintTextWithClosure <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"second\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수의 마지막 파라미터로 클로저를 받는 경우 소괄호와 Algument label을 생략 가능하다.</p>\n<br/>\n<h3>Multiple Trailing closure</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function-definition function\">multipleClosure</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> third<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">second</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">third</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 기존 문법</span>\n<span class=\"token function\">multipleClosure</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 여러개의 클로저를 사용할때 더 간소화된 문법으로 사용 가능</span>\n<span class=\"token comment\">// multipleClosure {</span>\n<span class=\"token comment\">//   print(1)</span>\n<span class=\"token comment\">// } second: {</span>\n<span class=\"token comment\">//   print(2)</span>\n<span class=\"token comment\">// } third: {</span>\n<span class=\"token comment\">//   print(3)</span>\n<span class=\"token comment\">// }</span></code></pre></div>","frontmatter":{"title":"클로저(Closer)","summary":"클로저(Closer)","date":"2022.09.25.","categories":["TIL","Swift"]}}}]}},"pageContext":{"slug":"/2022-09-25-클로저(Closer)/"}},"staticQueryHashes":[]}